{"ast":null,"code":"import { enable as enableDarkMode, disable as disableDarkMode, auto as followSystemColorScheme } from 'darkreader';\nimport * as i0 from \"@angular/core\";\nexport let DarkModeService = /*#__PURE__*/(() => {\n  class DarkModeService {\n    constructor() {\n      this.darkModeTheme = {\n        brightness: 100,\n        contrast: 90,\n        sepia: 0\n      };\n    }\n\n    getDarkMode() {\n      return localStorage.getItem('darkMode');\n    }\n\n    setDarkMode(mode) {\n      localStorage.setItem('darkMode', mode);\n      this.updatePageStyle();\n    }\n\n    updatePageStyle() {\n      switch (this.getDarkMode()) {\n        case \"auto\":\n          followSystemColorScheme(this.darkModeTheme);\n          break;\n\n        case \"light\":\n          disableDarkMode();\n          break;\n\n        case \"dark\":\n          enableDarkMode(this.darkModeTheme);\n          break;\n      }\n    }\n\n    init() {\n      if (!this.getDarkMode()) {\n        this.setDarkMode(\"auto\");\n      } else {\n        if (this.getDarkMode() === \"auto\") {\n          window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n            this.updatePageStyle();\n          });\n        }\n\n        this.updatePageStyle();\n      }\n    }\n\n  }\n\n  DarkModeService.ɵfac = function DarkModeService_Factory(t) {\n    return new (t || DarkModeService)();\n  };\n\n  DarkModeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DarkModeService,\n    factory: DarkModeService.ɵfac,\n    providedIn: 'root'\n  });\n  return DarkModeService;\n})();","map":null,"metadata":{},"sourceType":"module"}