{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport { roles } from '../../../../src/_helpers/authRoles';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./socket.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(socketService, router) {\n      this.socketService = socketService;\n      this.router = router;\n      this.access_token = \"\";\n      this.profile = undefined;\n      this.roles = [];\n\n      if (localStorage.getItem(\"access_token\") !== null) {\n        this.access_token = localStorage.getItem(\"access_token\");\n        this.loadProfile();\n        this.socketService.sendAccessToken(this.access_token);\n      }\n\n      this.roles = roles;\n    }\n\n    setToken(value) {\n      localStorage.setItem(\"access_token\", value);\n      this.access_token = value;\n      this.loadProfile();\n      this.socketService.sendAccessToken(this.access_token);\n    }\n\n    removeToken() {\n      localStorage.removeItem(\"access_token\");\n      this.access_token = \"\";\n    }\n\n    loadProfile() {\n      let now = Date.now().valueOf() / 1000;\n      let decoded = jwt_decode(this.access_token);\n\n      if (typeof decoded.exp !== 'undefined' && decoded.exp < now) {\n        return false;\n      }\n\n      if (typeof decoded.nbf !== 'undefined' && decoded.nbf > now) {\n        return false;\n      }\n\n      this.profile = decoded.user;\n      return true;\n    }\n\n    login(username, password) {\n      return new Promise(resolve => {\n        this.socketService.socket.emit(\"login\", username, password);\n        this.socketService.socket.once(\"login_response\", response => {\n          if (response.loginOk === true) {\n            this.setToken(response.accessToken);\n          }\n\n          resolve(response);\n        });\n      });\n    }\n\n    logout(routerDestination = null) {\n      this.removeToken();\n      this.profile = undefined;\n\n      if (routerDestination === null) {\n        routerDestination = [\"home\"];\n      }\n\n      this.router.navigate(routerDestination);\n    }\n\n    requireRole(role) {\n      if (this.profile === undefined) return false;\n      if (this.profile.roles.includes(\"admin\")) return true;\n      if (!this.profile.roles.includes(role)) return false;\n      return true;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.SocketService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}